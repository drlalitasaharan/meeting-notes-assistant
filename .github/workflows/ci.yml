name: CI
on:
  push:
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Docker info
        run: |
          docker --version
          docker compose version
      - name: Build images
        run: docker compose build

  smoke:
    runs-on: ubuntu-latest
    needs: build
    env:
      DATABASE_URL: sqlite:////app/backend/dev.db
    steps:
      - uses: actions/checkout@v4

      - name: Install test tools (jq, ImageMagick, curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq imagemagick curl

      - name: Compose config (debug)
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml config

      - name: Boot stack
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml up -d --build

      - name: Wait for API (healthz)
        run: |
          echo "Waiting for backend container..."
          for i in {1..40}; do
            if docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml exec -T backend curl -fs http://127.0.0.1:8000/healthz >/dev/null 2>&1; then
              echo "✅ API is up!"
              exit 0
            fi
            echo "Waiting... ($i)"
            sleep 3
          done
          echo "❌ API failed to start in time"
          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml logs backend
          exit 1
      - name: Smoke – process meeting 1
        run: |
          set -euo pipefail
          mkdir -p storage/1
          echo "Test OCR slide" > storage/1/slide.txt
          convert -size 600x200 xc:white -pointsize 32 -gravity center -annotate 0 "Hello OCR" storage/1/slide.png || true

          JOB=$(docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml exec -T backend \
                curl -fsS -X POST http://127.0.0.1:8000/v1/meetings/1/process | jq -r .job_id)
          echo "JOB=$JOB"

          for i in {1..60}; do
            S=$(docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml exec -T backend \
                 curl -fsS http://127.0.0.1:8000/v1/jobs/$JOB | jq -r .status)
            echo "status=$S"
            [ "$S" = "finished" ] && break
            sleep 2
          done

          FINAL=$(docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml exec -T backend \
                  curl -fsS http://127.0.0.1:8000/v1/jobs/$JOB | jq -r .status)
          if [ "$FINAL" != "finished" ]; then
            echo "Job did not finish in time (status=$FINAL)"
            exit 1
          fi

          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml exec -T backend \
            curl -fsS http://127.0.0.1:8000/v1/meetings/1/notes | jq .

      - name: Archive docker logs (on failure)
        if: failure()
        run: |
          mkdir -p artifacts
          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml ps
          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml logs --no-color > artifacts/compose.log

      - name: Upload logs artifact (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: artifacts/compose.log

      - name: Show container logs (always)
        if: always()
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml ps
          docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml logs --no-color --timestamps || true

      - name: Tear down (always)
        if: always()
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml -f docker-compose.override.ci.yml down -v
