name: CI

on:
  push:
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Docker info
        run: |
          docker --version
          docker compose version
      - name: Build images
        run: docker compose build

  smoke:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Install test tools (jq, ImageMagick, curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq imagemagick curl

      - name: Boot stack
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build

      - name: Wait for API (/healthz)
        run: |
          set -euo pipefail
          for i in {1..60}; do
            if curl -fsS http://localhost:8000/healthz >/dev/null; then
              echo "API is up"
              exit 0
            fi
            sleep 2
          done
          echo "Timed out waiting for API"
          exit 1

      - name: Smoke â€“ process meeting 1
        run: |
          set -euo pipefail
          mkdir -p storage/1
          echo "Test OCR slide" > storage/1/slide.txt
          convert -size 600x200 xc:white -pointsize 32 -gravity center -annotate 0 "Hello OCR" storage/1/slide.png || true

          JOB=$(curl -fsS -X POST http://localhost:8000/v1/meetings/1/process | jq -r .job_id)
          echo "JOB=$JOB"

          for i in {1..60}; do
            S=$(curl -fsS http://localhost:8000/v1/jobs/$JOB | jq -r .status)
            echo "status=$S"
            if [ "$S" = "finished" ]; then
              break
            fi
            sleep 2
          done

          FINAL=$(curl -fsS http://localhost:8000/v1/jobs/$JOB | jq -r .status)
          if [ "$FINAL" != "finished" ]; then
            echo "Job did not finish in time (status=$FINAL)"
            exit 1
          fi

          curl -fsS http://localhost:8000/v1/meetings/1/notes | jq .

      - name: Show container logs (always)
        if: always()
        run: |
          docker compose ps
          docker compose logs --no-color --timestamps || true

      - name: Tear down (always)
        if: always()
        run: docker compose down -v
