services:
  # --- FastAPI API (containerized) ---
  # NOTE: Comment this out if you run the API bare-metal with uvicorn.
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    env_file: .env
    volumes:
      - ./backend:/app/backend:delegated
    depends_on:
      - db

  # --- Placeholder frontend (Streamlit) ---
  # TIP: You likely want to replace this with a Next.js service later.
  frontend:
    image: python:3.11-slim
    working_dir: /app
    command: >
      bash -lc "pip install --upgrade pip &&
                pip install streamlit &&
                streamlit run frontend/app.py --server.port ${FRONTEND_PORT:-8501} --server.address 0.0.0.0"
    ports:
      - "8501:8501"
    env_file: .env
    volumes:
      - ./frontend:/app/frontend:delegated
    depends_on:
      - api

  # --- Postgres ---
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER:-mna}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mna}
      POSTGRES_DB: ${DB_NAME:-mna}
    ports:
      - "5432:5432"
    volumes:
      - mna_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mna} -d ${DB_NAME:-mna}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # --- MinIO (S3-compatible object storage) ---
  minio:
    image: minio/minio:latest
    container_name: mna_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minio123}
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web console
    volumes:
      - mna_minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 20

  # --- One-shot init to create buckets ---
  minio-init:
    image: minio/mc:latest
    container_name: mna_minio_init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${S3_ACCESS_KEY:-minio} ${S3_SECRET_KEY:-minio123} &&
      mc mb -p local/${S3_BUCKET_RAW:-meetings-raw} || true &&
      mc mb -p local/${S3_BUCKET_DERIVED:-meetings-derived} || true &&
      mc anonymous set private local/${S3_BUCKET_RAW:-meetings-raw} &&
      mc anonymous set private local/${S3_BUCKET_DERIVED:-meetings-derived} &&
      echo 'MinIO buckets ready';
      "

volumes:
  mna_pg:
  mna_minio:

