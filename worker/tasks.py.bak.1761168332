from app.db import SessionLocal
from app.models.job import Job, JobStatus
from app.services.storage import choose_storage

def demo_job(job_id: str, job_type: str, payload: dict):
    db = SessionLocal()
    try:
        job = db.get(Job, job_id)
        if not job:
            return
        job.status = JobStatus.running
        db.commit()

        # optional artifact
        try:
            storage = choose_storage()
            key = f"jobs/{job_id}.json"
            if hasattr(storage, "put_json"):
                storage.put_json(key, {"echo": payload, "ok": True})
                job.artifact_key = key
        except Exception:
            pass

        job.status = JobStatus.succeeded
        db.commit()
    except Exception as e:
        if 'job' in locals() and job:
            job.status = JobStatus.failed
            job.error = str(e)
            db.commit()
        raise
    finally:
        db.close()

def generic_job(job_id: str, job_type: str, payload: dict):
    db = SessionLocal()
    try:
        job = db.get(Job, job_id)
        if job:
            job.status = JobStatus.succeeded
            db.commit()
    finally:
        db.close()
